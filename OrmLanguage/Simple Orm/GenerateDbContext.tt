<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" hostspecific="True" debug="True" language="C#" #>
<#@ OrmLanguage processor="OrmLanguageDirectiveProcessor" requires="fileName='Test.simpleorm'" #>
<#@ include file="Includes\FileGenerator.tt" #>
<#@ import namespace="System.Runtime.Remoting.Messaging" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="EnvDTE" #>
<#@ output extension=".cs" #>
<#var visualStudio = ( this.Host as IServiceProvider )
        .GetService( typeof( EnvDTE.DTE ) ) as EnvDTE.DTE;
    var project = visualStudio.Solution
        .FindProjectItem( this.Host.TemplateFile )
        .ContainingProject as EnvDTE.Project;
	string strDefaultNamespace = project.Properties.Item( "DefaultNamespace" ).Value.ToString();
	string mappingNamespace = strDefaultNamespace + ".Mappings";
	string modelNamespace = strDefaultNamespace + ".Models";
 #>
 using ORM.Core;
 using ORM.Mappings;

 using <#= mappingNamespace #>;
 using <#= modelNamespace #>;

 namespace <#= strDefaultNamespace #> 
 {
	public class DbContext : BaseDbContext 
	{
		public DbContext() : base("CustomConnectionString")
		{
		}

<#
foreach(EntityElement element in this.SampleOrmModel.Elements) {
#>
		public IDbSet<<#=element.Name#>> <#=element.Name#>s { get; set; }
<#
}
#>

		public override void Mappings(IEntityMappingContainer entityMappingContainer)
		{
<#
foreach(EntityElement element in this.SampleOrmModel.Elements) {
#>
			entityMappingContainer.AddMapping(new <#=element.Name#>Mapping());
<#
}
#>
		}
	}
 }