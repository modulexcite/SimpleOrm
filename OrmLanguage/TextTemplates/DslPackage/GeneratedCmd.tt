<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".h" #>
<#
	string dslName = this.Dsl.Name;
	string dslDisplayName = this.Dsl.DisplayName;
	
#>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// This file contains generated default command definitions.
// Additional command definitions should be added to CustomCmd.ctc.
//

///////////////////////////////////////////////////////////////////////////////
// CTC command IDs - MUST be kept in sync with Constants.cs

#define menuidContext		0x10000
#define grpidContextMain	0x20000
<#
	if(this.Dsl.Explorer != null)
	{
#>
#define menuidExplorer		0x10001
#define cmdidViewExplorer	0x0001
<#
	}
#>

///////////////////////////////////////////////////////////////////////////////
// CTC macros

#define OI_NOID		guidOfficeIcon:msotcidNoIcon
#define DIS_DEF		DEFAULTDISABLED | DEFAULTINVISIBLE | DYNAMICVISIBILITY
#define VIS_DEF		COMMANDWELLONLY	

///////////////////////////////////////////////////////////////////////////////
// Menu definitions

#define GENERATED_MENUS \
	guidCmdSet:menuidContext, guidCmdSet:menuidContext,	0x0000,	CONTEXT|ALWAYSCREATE, "<#= dslDisplayName #> Designer Context Menu", "<#= dslName #> Context"; \
<#
	if(this.Dsl.Explorer != null)
	{
#>
	guidCmdSet:menuidExplorer, guidCmdSet:menuidExplorer, 0x0000, CONTEXT|ALWAYSCREATE, "<#= dslDisplayName #> Explorer Context Menu", "<#= this.Dsl.ExplorerTitleMenuName #>"; \
<#
	}
#>

///////////////////////////////////////////////////////////////////////////////
// Group definitions

#define GENERATED_GROUPS \
	guidCmdSet:grpidContextMain, guidCmdSet:grpidContextMain,	0x0010; \


///////////////////////////////////////////////////////////////////////////////
// Command definitions

#define GENERATED_BUTTONS \
<#
	if(this.Dsl.Explorer != null)
	{
#>
	guidCmdSet:cmdidViewExplorer, guidSHLMainMenu:IDG_VS_WNDO_OTRWNDWS1, 0x0100,	OI_NOID, BUTTON, DIS_DEF, "<#= this.Dsl.ExplorerTitleMenuName #>";
<#
	}
#>


///////////////////////////////////////////////////////////////////////////////
// Command placement definitions

#define GENERATED_CMDPLACEMENT \
	guidVSStd97:cmdidDelete, guidCmdSet:grpidContextMain, 0x0010; \
	guidSHLMainMenu:IDG_VS_CTXT_SOLUTION_PROPERTIES, guidCmdSet:menuidContext, 0x0500; \
<#
	Designer designer = CodeGenerationUtilities.GetDesigner(this.Dsl);
	if(designer != null)
	{
#>
	guidCmdSet:grpidContextMain, guidCmdSet:menuidContext, 0x0010; \
	guidCommonModelingMenu:grpidCompartmentShapeMenuGroup, guidCmdSet:menuidContext, 0x0008; \
	guidCommonModelingMenu:grpidSwimlaneShapeMenuGroup, guidCmdSet:menuidContext, 0x0008; \
	guidCommonModelingMenu:grpidValidateCommands, guidCmdSet:menuidContext, 0x0020; \
	guidCommonModelingMenu:grpidLayoutMenuGroup, guidCmdSet:menuidContext, 0x0030; \
<#
	}
	if(this.Dsl.Explorer != null)
	{
#>
	guidCommonModelingMenu:grpidExplorerMenuGroup, guidCmdSet:menuidExplorer, 0x0010; \
	guidSHLMainMenu:IDG_VS_CTXT_SOLUTION_PROPERTIES, guidCmdSet:menuidExplorer, 0x0020; \
	guidCommonModelingMenu:grpidValidateCommands, guidCmdSet:menuidExplorer, 0x0030; \
<#
	}
#>
    

///////////////////////////////////////////////////////////////////////////////
// Command visibility definitions

#define GENERATED_VISIBILITY \
<#
	if(this.Dsl.Explorer != null)
	{
#>
	guidCmdSet:cmdidViewExplorer, guidEditor; \
<#
	}
#>

///////////////////////////////////////////////////////////////////////////////
// CTC guids - MUST be kept in sync with GeneratedCmd.cs

#define guidPkg			{ 0x<#= ByteArrayToGuid(this.Dsl.PackageGuid.ToByteArray()) #> } }
<#
	if(this.Dsl.Editor != null)
	{
#>
#define guidEditor		{ 0x<#= ByteArrayToGuid(this.Dsl.Editor.EditorGuid.ToByteArray()) #> } }
<#
	}
#>

<#+
private string ByteArrayToGuid(byte[] bytes)
{
	char[] hexDigits = {
		'0', '1', '2', '3', '4', '5', '6', '7',
		'8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};
	System.Text.StringBuilder pkgGuid = new System.Text.StringBuilder(82);
	for (int i = 0; i < 16; i++) 
	{
		if(i == 8)
		{
			pkgGuid.Append(", { 0x");
		}
		if(i == 4 || i == 6 || i > 8)
		{
			pkgGuid.Append(", 0x");
		}
		// byteIndex calculation accounts for ordering of bytes returned from Guid.ToByteArray();
		int byteIndex;
		if (i < 4) byteIndex = 3 - i;
		else if (i < 6) byteIndex = 9 - i;
		else if (i < 8) byteIndex = 13 - i;
		else byteIndex = i;
		int b = bytes[byteIndex];
		pkgGuid.Append(hexDigits[b >> 4]);
		pkgGuid.Append(hexDigits[b & 0xF]);
	}
	return pkgGuid.ToString();
}
#>