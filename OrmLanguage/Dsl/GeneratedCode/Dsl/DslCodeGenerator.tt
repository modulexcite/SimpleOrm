<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Globalization" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".cs" #>
<#@ include file="Dsl\DomainModel.tt" #>
<#@ include file="Dsl\DomainClass.tt" #>
<#@ include file="Dsl\DomainRelationship.tt" #>
<#@ include file="Dsl\DomainProperty.tt" #>
<#@ include file="Dsl\DomainRole.tt" #>
<#@ include file="Dsl\DomainEnumeration.tt" #>
<#@ include file="Dsl\PathMerge.tt" #>
<#@ include file="Dsl\Merge.tt" #>
<#@ include file="Dsl\Utilities.tt" #>
<#@ include file="Dsl\Closures.tt" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
<#
	if (CodeGenerationUtilities.DefinesDiagramElements(this.DslLibrary))
	{
#>
using DslDiagrams = global::Microsoft.VisualStudio.Modeling.Diagrams;
<#
	}

	// NOTE:
	// This file is not used in DSLs generated from the designer wizard.
	// It generates all domain model, domain class, and domain relationship
	// code into a single file, which is useful for our internal domain models.
	// 
	
	GenerateDomainModel(this.DslLibrary);
	
	// Generate code for all the classes in this domain model
	foreach(DomainClass domainClass in this.DslLibrary.Classes)
	{
		GenerateDomainClass(domainClass);
	}
	
	// Generate code for all the relationships in this domain model
	foreach(DomainRelationship domainRelationship in this.DslLibrary.Relationships)
	{
		GenerateDomainRelationship(domainRelationship);
	}
#>
